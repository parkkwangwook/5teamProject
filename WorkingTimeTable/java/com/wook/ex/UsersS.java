package com.wook.ex;

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * 회원 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class UsersS implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** 아이디. */
	private String userId;

	/** 패스워드. */
	private String password;

	/** 확인비밀번호. */
	private String password2;

	/** user_name. */
	private String userName;

	/** 전화번호. */
	private String tel;

	/** email. */
	private String email;

	/** 생년월일. */
	private Date birth;

	/** 직급. */
	private String grade;

	/** 회원가입일. */
	private Date joinDate;

	/** question. */
	private String question;

	/** answer. */
	private String answer;

	/** 게시판 목록. */
	private Set<BcommentS> bcommentSet;

	/** 회사구성원 목록. */
	private Set<CompanyPersonS> companyPersonSet;

	/** 댓글 목록. */
	private Set<ReplyS> replySet;

	/**
	 * 생성자.
	 */
	public UsersS() {
		this.replySet = new HashSet<ReplyS>();
		this.bcommentSet = new HashSet<BcommentS>();
		this.companyPersonSet = new HashSet<CompanyPersonS>();
	}

	/**
	 * 아이디을 설정합니다..
	 * 
	 * @param userId
	 *            아이디
	 */
	public void setUserId(String userId) {
		this.userId = userId;
	}

	/**
	 * 아이디을 가져옵니다..
	 * 
	 * @return 아이디
	 */
	public String getUserId() {
		return this.userId;
	}

	/**
	 * 패스워드을 설정합니다..
	 * 
	 * @param password
	 *            패스워드
	 */
	public void setPassword(String password) {
		this.password = password;
	}

	/**
	 * 패스워드을 가져옵니다..
	 * 
	 * @return 패스워드
	 */
	public String getPassword() {
		return this.password;
	}

	/**
	 * 확인비밀번호을 설정합니다..
	 * 
	 * @param password2
	 *            확인비밀번호
	 */
	public void setPassword2(String password2) {
		this.password2 = password2;
	}

	/**
	 * 확인비밀번호을 가져옵니다..
	 * 
	 * @return 확인비밀번호
	 */
	public String getPassword2() {
		return this.password2;
	}

	/**
	 * user_name을 설정합니다..
	 * 
	 * @param userName
	 *            user_name
	 */
	public void setUserName(String userName) {
		this.userName = userName;
	}

	/**
	 * user_name을 가져옵니다..
	 * 
	 * @return user_name
	 */
	public String getUserName() {
		return this.userName;
	}

	/**
	 * 전화번호을 설정합니다..
	 * 
	 * @param tel
	 *            전화번호
	 */
	public void setTel(String tel) {
		this.tel = tel;
	}

	/**
	 * 전화번호을 가져옵니다..
	 * 
	 * @return 전화번호
	 */
	public String getTel() {
		return this.tel;
	}

	/**
	 * email을 설정합니다..
	 * 
	 * @param email
	 *            email
	 */
	public void setEmail(String email) {
		this.email = email;
	}

	/**
	 * email을 가져옵니다..
	 * 
	 * @return email
	 */
	public String getEmail() {
		return this.email;
	}

	/**
	 * 생년월일을 설정합니다..
	 * 
	 * @param birth
	 *            생년월일
	 */
	public void setBirth(Date birth) {
		this.birth = birth;
	}

	/**
	 * 생년월일을 가져옵니다..
	 * 
	 * @return 생년월일
	 */
	public Date getBirth() {
		return this.birth;
	}

	/**
	 * 직급을 설정합니다..
	 * 
	 * @param grade
	 *            직급
	 */
	public void setGrade(String grade) {
		this.grade = grade;
	}

	/**
	 * 직급을 가져옵니다..
	 * 
	 * @return 직급
	 */
	public String getGrade() {
		return this.grade;
	}

	/**
	 * 회원가입일을 설정합니다..
	 * 
	 * @param joinDate
	 *            회원가입일
	 */
	public void setJoinDate(Date joinDate) {
		this.joinDate = joinDate;
	}

	/**
	 * 회원가입일을 가져옵니다..
	 * 
	 * @return 회원가입일
	 */
	public Date getJoinDate() {
		return this.joinDate;
	}

	/**
	 * question을 설정합니다..
	 * 
	 * @param question
	 *            question
	 */
	public void setQuestion(String question) {
		this.question = question;
	}

	/**
	 * question을 가져옵니다..
	 * 
	 * @return question
	 */
	public String getQuestion() {
		return this.question;
	}

	/**
	 * answer을 설정합니다..
	 * 
	 * @param answer
	 *            answer
	 */
	public void setAnswer(String answer) {
		this.answer = answer;
	}

	/**
	 * answer을 가져옵니다..
	 * 
	 * @return answer
	 */
	public String getAnswer() {
		return this.answer;
	}

	/**
	 * 게시판 목록을 설정합니다..
	 * 
	 * @param bcommentSet
	 *            게시판 목록
	 */
	public void setBcommentSet(Set<BcommentS> bcommentSet) {
		this.bcommentSet = bcommentSet;
	}

	/**
	 * 게시판를 추가합니다..
	 * 
	 * @param bcomment
	 *            게시판
	 */
	public void addBcomment(BcommentS bcomment) {
		this.bcommentSet.add(bcomment);
	}

	/**
	 * 게시판 목록을 가져옵니다..
	 * 
	 * @return 게시판 목록
	 */
	public Set<BcommentS> getBcommentSet() {
		return this.bcommentSet;
	}

	/**
	 * 회사구성원 목록을 설정합니다..
	 * 
	 * @param companyPersonSet
	 *            회사구성원 목록
	 */
	public void setCompanyPersonSet(Set<CompanyPersonS> companyPersonSet) {
		this.companyPersonSet = companyPersonSet;
	}

	/**
	 * 회사구성원를 추가합니다..
	 * 
	 * @param companyPerson
	 *            회사구성원
	 */
	public void addCompanyPerson(CompanyPersonS companyPerson) {
		this.companyPersonSet.add(companyPerson);
	}

	/**
	 * 회사구성원 목록을 가져옵니다..
	 * 
	 * @return 회사구성원 목록
	 */
	public Set<CompanyPersonS> getCompanyPersonSet() {
		return this.companyPersonSet;
	}

	/**
	 * 댓글 목록을 설정합니다..
	 * 
	 * @param replySet
	 *            댓글 목록
	 */
	public void setReplySet(Set<ReplyS> replySet) {
		this.replySet = replySet;
	}

	/**
	 * 댓글를 추가합니다..
	 * 
	 * @param reply
	 *            댓글
	 */
	public void addReply(ReplyS reply) {
		this.replySet.add(reply);
	}

	/**
	 * 댓글 목록을 가져옵니다..
	 * 
	 * @return 댓글 목록
	 */
	public Set<ReplyS> getReplySet() {
		return this.replySet;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((userId == null) ? 0 : userId.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		UsersS other = (UsersS) obj;
		if (userId == null) {
			if (other.userId != null) {
				return false;
			}
		} else if (!userId.equals(other.userId)) {
			return false;
		}
		return true;
	}

}
